# 多态
# 多态指的是一种使用对象的方式，子类重写父类方法，调用不同子类对象的相同父类方法，可以产生不同的执行结果
# 实现步骤：
#       1.定义父类，提供公共方法
#       2.定义子类，重写父类方法
#       3.传递子类对象给调用者，可以看到不同子类执行效果不同

class Dog():
    def work(self):
        print('听命令行事')

class ArmyDog(Dog):
    def work(self):
        print('追击敌人')

class DrugDog(Dog):
    def work(self):
        print('追查毒品')

class Police():
    def work_with_dog(self, dog):     # 给一个形参dog传入调用对象
        dog.work()

ar = ArmyDog()
dr = DrugDog()
pol = Police()
pol.work_with_dog(ar)
pol.work_with_dog(dr)




























































































































































































































































































